apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-backend
  labels:
    app: backend
spec:
  replicas: {{ .Values.backend.replicaCount }}
  selector:
    matchLabels:
      app: backend
  template:
    metadata:
      labels:
        app: backend
      
      annotations:
        prometheus.io/scrape: 'true'
     
        prometheus.io/path:   '/metrics'
    
        prometheus.io/port:   '8080'
    spec:
      containers:
      - name: backend
        image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
        ports:
        - name: http
          containerPort: 8080
          protocol: TCP
        
     
        livenessProbe:
          httpGet:
            path: /metrics 
            port: http
          initialDelaySeconds: 15 
          periodSeconds: 20       

        readinessProbe:
          httpGet:
            path: /metrics
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10

        resources:
          {{- toYaml .Values.backend.resources | nindent 10 }}

        envFrom:
        - configMapRef:
            name: {{ .Release.Name }}-config
        - secretRef:
            name: {{ .Release.Name }}-secret